openapi: "3.0.3"
info:
  title: "dasbod API"
  description: "dasbod API"
  version: "1.0.0"
servers:
- url: "https://dasbod"
paths:
  /budgetPlan:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "list"
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/BudgetPlan"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Entity_BudgetPlan"
  /budgetPlan/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Entity_BudgetPlan"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Function1_? super Entity<BudgetPlan>"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/BudgetPlan"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Entity_BudgetPlan"
components:
  schemas:
    LocalDate:
      type: "object"
      properties: {}
    BudgetCategory:
      type: "object"
      properties:
        name:
          type: "string"
        amount:
          type: "number"
          format: "float"
      required:
      - "name"
    BudgetPlan:
      type: "object"
      properties:
        moneyAtStart:
          type: "number"
          format: "float"
        expectedIncome:
          type: "number"
          format: "float"
        startDate:
          $ref: "#/components/schemas/LocalDate"
        endDate:
          $ref: "#/components/schemas/LocalDate"
        categories:
          type: "array"
          items:
            $ref: "#/components/schemas/BudgetCategory"
      required:
      - "startDate"
      - "endDate"
      - "categories"
    Instant:
      type: "object"
      properties: {}
    ModificationLog:
      type: "object"
      properties:
        timestamp:
          $ref: "#/components/schemas/Instant"
        source:
          type: "string"
        user:
          type: "string"
      required:
      - "timestamp"
      - "source"
      - "user"
    ModificationsLog:
      type: "object"
      properties:
        created:
          $ref: "#/components/schemas/ModificationLog"
        updated:
          $ref: "#/components/schemas/ModificationLog"
        deleted:
          $ref: "#/components/schemas/ModificationLog"
      required:
      - "created"
    EntityMetadata:
      type: "object"
      properties:
        modificationsLog:
          $ref: "#/components/schemas/ModificationsLog"
        owner:
          type: "string"
      required:
      - "modificationsLog"
      - "owner"
    Entity:
      type: "object"
      properties:
        id:
          type: "string"
        metadata:
          $ref: "#/components/schemas/EntityMetadata"
      required:
      - "id"
      - "metadata"
      - "data"
    Entity_BudgetPlan:
      type: "object"
      properties:
        id:
          type: "string"
        metadata:
          $ref: "#/components/schemas/EntityMetadata"
        data:
          $ref: "#/components/schemas/BudgetPlan"
    Function1:
      type: "object"
      properties: {}
    Function1_? super Entity<BudgetPlan>:
      type: "object"